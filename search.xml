<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>几种C语言中常见的编译器报错类型</title>
      <link href="/2023/04/09/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84IDE%E6%8A%A5%E9%94%99%E6%8F%90%E7%A4%BA/"/>
      <url>/2023/04/09/C%E8%AF%AD%E8%A8%80%E4%B8%AD%E5%B8%B8%E8%A7%81%E7%9A%84IDE%E6%8A%A5%E9%94%99%E6%8F%90%E7%A4%BA/</url>
      
        <content type="html"><![CDATA[<font face = "微软雅黑"><h2 id="下面是一些常见的IDE报错提示以及对应的解释"><a href="#下面是一些常见的IDE报错提示以及对应的解释" class="headerlink" title="下面是一些常见的IDE报错提示以及对应的解释:"></a>下面是一些常见的IDE报错提示以及对应的解释:</h2><h4 id="1-语法错误-在程序中使用无效的语法或者语法错误的代码行可能导致编译器报错。"><a href="#1-语法错误-在程序中使用无效的语法或者语法错误的代码行可能导致编译器报错。" class="headerlink" title="1.语法错误:在程序中使用无效的语法或者语法错误的代码行可能导致编译器报错。"></a><strong>1.语法错误:在程序中使用无效的语法或者语法错误的代码行可能导致编译器报错。</strong></h4><p><strong>例如,以下代码中漏掉了分号:</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a = <span class="number">10</span></span><br></pre></td></tr></table></figure><hr><p><img src="https://s2.loli.net/2023/04/09/nP8OyhQaCtpsJXi.png" alt="语法错误IDE报错提示"></p><hr><p><strong>正确的写法是这样的:</strong>  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> a =<span class="number">10</span>;</span><br></pre></td></tr></table></figure><h4 id="2-缺少头文件-在程序中使用某些库函数时，需要包含相应的头文件。如果忘记包含头文件或者头文件路径设置不正确，编译器会报错。"><a href="#2-缺少头文件-在程序中使用某些库函数时，需要包含相应的头文件。如果忘记包含头文件或者头文件路径设置不正确，编译器会报错。" class="headerlink" title="2.缺少头文件:在程序中使用某些库函数时，需要包含相应的头文件。如果忘记包含头文件或者头文件路径设置不正确，编译器会报错。"></a><strong>2.缺少头文件:在程序中使用某些库函数时，需要包含相应的头文件。如果忘记包含头文件或者头文件路径设置不正确，编译器会报错。</strong></h4><p><strong>例如，以下代码使用了<em>strcpy</em>函数但没有包含头文件<em>string.h</em>:</strong>  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> src[] = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line">    <span class="type">char</span> dest[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;源字符串：%s\n&quot;</span>, src);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;目标字符串：%s\n&quot;</span>, dest);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><img src="https://s2.loli.net/2023/04/09/R3bmHZ2fawSD7xE.png" alt="缺少头文件IDE报错提示"> </p><hr><p><strong>编译器会报错，提示找不到strcpy()函数。其他情况如你使用printf()函数但是没有包含头文件stdio.h，程序也会报类似的错。</strong></p><p><strong>正确的代码是这样的:</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> src[] = <span class="string">&quot;Hello, world!&quot;</span>;</span><br><span class="line">    <span class="type">char</span> dest[<span class="number">20</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line"></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;源字符串：%s\n&quot;</span>, src);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;目标字符串：%s\n&quot;</span>, dest);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><a href="https://www.runoob.com/cprogramming/c-function-strcpy.html">注:strcpy函数(click me)</a></p><hr><h4 id="3-重复定义-如果在程序中多次定义相同的变量或函数，编译器会报错。"><a href="#3-重复定义-如果在程序中多次定义相同的变量或函数，编译器会报错。" class="headerlink" title="3.重复定义:如果在程序中多次定义相同的变量或函数，编译器会报错。"></a><strong>3.重复定义:如果在程序中多次定义相同的变量或函数，编译器会报错。</strong></h4><p><strong>例如，以下代码中重复定义了变量a：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">20</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><hr><p><img src="https://s2.loli.net/2023/04/09/9DlBCPEyfUgvi17.png" alt="重复定义IDE报错提示">  </p><hr><font face="楷体"><p><strong>(注:在编译器报告的错误信息中，note 表示一条注释性信息，通常是为了帮助程序员理解错误的原因和上下文。在这个例子中，note 表示之前的定义在哪里，即第二行代码中的 int a &#x3D; 10;，这样程序员就可以找到在哪里第一次定义了变量 a。)</strong></p><font face = "微软雅黑"><p><strong>通常情况下，一个变量只能在同一个作用域中定义一次。因为如果在同一个作用域中定义了两个或更多同名变量，编译器无法确定在使用该变量时应该使用那个变量的值。因此正确的写法是这样的:</strong>  </p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="4-类型不匹配-在程序中使用不兼容的类型进行赋值或函数调用时，编译器会报错。"><a href="#4-类型不匹配-在程序中使用不兼容的类型进行赋值或函数调用时，编译器会报错。" class="headerlink" title="4.类型不匹配:在程序中使用不兼容的类型进行赋值或函数调用时，编译器会报错。"></a><strong>4.类型不匹配:在程序中使用不兼容的类型进行赋值或函数调用时，编译器会报错。</strong></h4><p><strong>例如，以下代码中尝试将字符串赋值给整型变量:</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="string">&quot;HELLO WORLD!&quot;</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>编译器会报错，提示类型不匹配:</strong> </p><hr><p><img src="https://s2.loli.net/2023/04/10/pJFQjA8M1e9ZV4q.png" alt="类型不匹配导致IDE报错"></p><hr><p><strong>正确的写法是这样的:</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> arr[] = <span class="string">&quot;HELLO WORLD!&quot;</span>; <span class="comment">//定义一个数组储存这段字符串</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, arr); <span class="comment">//要用%s格式化字符串的输出</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="5-如果使用了未声明的变量或函数，编译器会报错。"><a href="#5-如果使用了未声明的变量或函数，编译器会报错。" class="headerlink" title="5.如果使用了未声明的变量或函数，编译器会报错。"></a><strong>5.如果使用了未声明的变量或函数，编译器会报错。</strong></h4><p><strong>例如，以下代码中使用了未声明的变量b:</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> c = a + b; <span class="comment">//变量b未定义</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>编译器会报错，提示未定义的标识符:</strong></p><hr><p><img src="https://s2.loli.net/2023/04/09/38yqakW4O7SFIER.png" alt="未定义标识符IDE报错提示">  </p><hr><p><strong>正确写法:</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span> </span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a = <span class="number">10</span>;</span><br><span class="line">    <span class="type">int</span> b = <span class="number">5</span>;</span><br><span class="line">    <span class="type">int</span> c = a + b; </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,c);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++ </tag>
            
            <tag> 基础入门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>变量与字符串(上)</title>
      <link href="/2023/02/02/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2023/02/02/%E5%8F%98%E9%87%8F%E4%B8%8E%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<font face="微软雅黑"><h2 id="变量与字符串"><a href="#变量与字符串" class="headerlink" title="变量与字符串"></a>变量与字符串</h2><h4 id="一-变量"><a href="#一-变量" class="headerlink" title="一 变量"></a>一 变量</h4><p><strong>1.变量(<em>variable</em>):一种标签</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span>    <span class="comment">#这样就创建了一个变量x,x的值为1</span></span><br></pre></td></tr></table></figure><p>‘&#x3D;’叫做赋值操作符,它将其右边的值赋给左边</p><p>现在我们想打印出来这个变量x,那么就需要用到print函数:</p><h5 id="Eg1"><a href="#Eg1" class="headerlink" title="Eg1"></a>Eg1</h5><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:1</span></span><br></pre></td></tr></table></figure><p>print函数可以用来打印其后的括号内的字符以及字符串,它的具体用法会在之后的章节中提到,这里就不再赘述.<br><strong>重点:变量名是由字母、数字和下划线构成,但不能以数字打头:</strong></p><p>1_28(<strong>Wrong</strong>), py_1(<strong>Right</strong>), py-1(<strong>Wrong</strong>), py&amp;1(<em>Wrong</em>)</p><p>注：python3以上的版本变量名支持中文,但是非常非常不推荐用中文作为变量名</p><hr><p>2.变量,顾名思义就是可变的量,如:<br>Eg2:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span></span><br><span class="line">x=<span class="number">2</span></span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:2</span></span><br></pre></td></tr></table></figure><p>可以看到,最终打印出来的值是2,而不是1,这说明<strong>变量的值取决于最后一次赋值操作赋给它的量</strong></p><hr><p>3.除此之外,不同变量之间的值可以互相传递:<br>Eg3:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span></span><br><span class="line">y=<span class="number">2</span></span><br><span class="line">x=y</span><br><span class="line"><span class="built_in">print</span>(x)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:2</span></span><br></pre></td></tr></table></figure><p>最终打印出x的值是2,可以根据程序进行的过程,思考变量间的值进行交换的大致原理.  </p><hr><p>4.若有多个不同的变量,想赋给它们相同的值</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span></span><br><span class="line">y=<span class="number">1</span></span><br><span class="line">z=<span class="number">1</span></span><br><span class="line">a=<span class="number">1</span></span><br><span class="line">b=<span class="number">1</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>这么写是十分繁琐的,为了使程序更加简短、易读,我们还可以这么写:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">x=y=z=a=b=c=<span class="number">1</span></span><br><span class="line"><span class="built_in">print</span>(x,y,z,a,b,c)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:1 1 1 1 1 1</span></span><br></pre></td></tr></table></figure><hr><p>5.现有两个变量x和y,想对二者的值进行互换;<br>传统的写法是这样的:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span></span><br><span class="line">y=<span class="number">2</span></span><br><span class="line">z=x</span><br><span class="line">x=y</span><br><span class="line">y=z</span><br><span class="line"><span class="built_in">print</span>(x,y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:2 1</span></span><br></pre></td></tr></table></figure><p>这样写的好处是更容易理解,z相当于一个空瓶子,把x里的东西先倒进去,x就成了空的,再把y里的东西倒进去…<br>python作为最易上手的编程语言之一,自然还有更为简单的写法来完成这一工作:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">x=<span class="number">1</span></span><br><span class="line">y=<span class="number">2</span></span><br><span class="line">x,y=y,x</span><br><span class="line"><span class="built_in">print</span>(x,y)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:2 1</span></span><br></pre></td></tr></table></figure><hr><hr><h4 id="二-字符串"><a href="#二-字符串" class="headerlink" title="二 字符串"></a>二 字符串</h4><p><strong>1.字符串(<em>string</em>):使用字符串来表示文本序列.</strong><br>共有两种形式：<br>①单引号:用一对单引号将文本包含起来<br>例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;hello world&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:hello world</span></span><br></pre></td></tr></table></figure><p>②双引号:用一对双引号将文本包含起来<br>例如:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:hello world</span></span><br></pre></td></tr></table></figure><p>可以发现,不管单引号还是双引号,都可以包含一段字符串来让print函数完美地打印出这段字符串,看似这种设计十分鸡肋,其实不然; </p><hr><p>比如这个例子:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;It&#x27;</span>s up to you to decide.<span class="string">&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#输出结果:报错 SyntaxError: unterminated string literal (detected at line 1)</span></span><br></pre></td></tr></table></figure><p>这是因为<strong>需要打印的文本两头的单&#x2F;双引号都必须成双成对的存在</strong>,如上面的程序,It前的单引号与It后的单引号凑成了一对,使得后续的文本(s up to…)只有在结尾处有一个单引号,因此无法打印.<br>这种情况下我们应当使用双引号将这段字符串括起来:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;It&#x27;s up to you to decide.&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:It&#x27;s up to you to decide.</span></span><br></pre></td></tr></table></figure><hr><p>如果我们想打印这么一段话：”It’s up to you to decide.”<br>既包括双引号,又包括单引号,用上述的所有方法都无法打印出这段话;<br>这里是一个错误的写法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&quot;It&#x27;</span>s up to you to decide.<span class="string">&quot;&#x27;)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#输出结果:错误 SyntaxError: unterminated string literal (detected at line 1)</span></span><br></pre></td></tr></table></figure><p>问题出现在第二个单引号,如果没有这个单引号,程序应该是这样的:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&quot;It s up to you to decide.&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:&quot;It s up to you to decide.&quot;</span></span><br></pre></td></tr></table></figure><p>但是为了遵循英语语法,这个单引号不可删除.那么,我们就需要用到转义字符：\  </p><p><strong>2.转义字符：转义字符是很多程序语言、数据格式和通信协议的形式文法的一部分</strong></p><p><strong>下面是一些常用的转义字符:</strong>  </p><table><thead><tr><th align="left">转义字符</th><th align="left">说明</th></tr></thead><tbody><tr><td align="left">\n</td><td align="left">换行符,将光标位置移到下一行开头</td></tr><tr><td align="left">\t</td><td align="left">水平制表符,即tab键,一般相当于四个空格</td></tr><tr><td align="left">\b</td><td align="left">退格(backspace),将光标位置移到前一列</td></tr><tr><td align="left">\\</td><td align="left">反斜线</td></tr><tr><td align="left">\‘</td><td align="left">单引号</td></tr><tr><td align="left">\“</td><td align="left">双引号</td></tr></tbody></table><p>那么我们只需在引起歧义的单引号前加一个反斜杠,就能表示这个单引号只是个单引号,没有其他特殊的含义,程序就不会报错了;  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&quot;It\&#x27;s up to you to decide.&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:&quot;It&#x27;s up to you to decide.&quot;</span></span><br></pre></td></tr></table></figure><hr><p><strong>3.我们来看一看其他出现频率很高的转义字符的用法：</strong><br>①\n 换行符  </p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;one is 1\ntwo is 2&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:</span></span><br><span class="line">one <span class="keyword">is</span> <span class="number">1</span></span><br><span class="line">two <span class="keyword">is</span> <span class="number">2</span></span><br><span class="line">```  </span><br><span class="line">②\t 水平制表符</span><br><span class="line">```python</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\thello world&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出结果:    </span></span><br><span class="line">    hello world</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python基础理论 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 基础入门 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
